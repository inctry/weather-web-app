{"version":3,"sources":["component/weather_card/weather_card.tsx","component/search_dialog/search_dialog.tsx","page/weather/weather.tsx","component/weather_forecast_card/weather_forecast_card.tsx","page/weather_forecast/weather_forecast.tsx","App.js","index.js"],"names":["WeatherCard","props","useState","undefined","weatherState","setWeatherState","todayWeather","setTodayWeather","useEffect","axios","get","cityID","then","res","console","log","data","forecast","title","cityInfo","city","extra","to","style","width","hoverable","className","ymd","week","high","low","sunrise","sunset","fx","fl","SearchDialog","options","setOptions","currentValue","setCurrentValue","visible","centered","onOk","e","confirmSearchText","onCancel","hideDialog","onSearch","searchText","Object","keys","filter","dataName","includes","map","item","value","filterData","onChange","placeholder","Weather","list","setList","visibleDialog","setVisibleDialog","weatherList","Cookie","getJSON","length","set","JSON","stringify","gutter","idx","span","onClick","PlusSquareOutlined","WeatherForecastCard","weather","WeatherForecast","location","pathname","App","exact","path","component","name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.527b6730.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Card } from 'antd';\nimport { Link } from 'react-router-dom';\nimport './weather_card.css';\n\n\nconst WeatherCard : React.FC<{cityID: string}> = (props: {cityID: string}) => {\n  const [weatherState, setWeatherState] = useState<any>(undefined);\n  const [todayWeather, setTodayWeather] = useState<any>({});\n  useEffect(() => {\n    axios.get(`/api/weather/city/${props.cityID}`)\n    .then(res => {\n      console.log(res);\n      setWeatherState(res);\n      setTodayWeather(res.data.data.forecast[0]);\n    });\n  }, []);\n  return (\n    <Card title={weatherState?.data.cityInfo.city} extra={<Link to={`/${props.cityID}`}>查看未来详情</Link>} style={{ width: 250 }} hoverable={true}>\n      <div className=\"displaySpaceBetween\">\n        <div>{todayWeather?.ymd}</div>\n        <div>{todayWeather?.week}</div>\n      </div>\n      <div className=\"displaySpaceBetween\">\n        <div>{todayWeather?.high}</div>\n        <div>{todayWeather?.low}</div>\n      </div>\n      <div className=\"displaySpaceBetween\">\n        <div>日出：{todayWeather?.sunrise}</div>\n        <div>日落：{todayWeather?.sunset}</div>\n      </div>\n      <div className=\"displaySpaceBetween\">\n        <div>风向：{todayWeather?.fx}</div>\n        <div>风力：{todayWeather?.fl}</div>\n      </div>\n    </Card>\n  );\n\n}\n\nexport default WeatherCard;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, AutoComplete } from 'antd';\nimport data from '../../config/city_id_map.json';\n\nconst filterData = (searchText: string) : Array<{value: string}> => {\n  return Object.keys(data).filter((dataName) => {\n    return dataName.includes(searchText);\n  }).map((item) => {\n    return { value: item };\n  });\n}\n\nconst SearchDialog : React.FC<{visible: boolean, hideDialog(e ?: any): void, confirmSearchText(searchText: string) : void}> = (props: {visible: boolean, hideDialog: Function, confirmSearchText: Function}) => {\n  const [options, setOptions] = useState<Array<{value: string}> >([]);\n  const [currentValue, setCurrentValue] = useState<string>('');\n  const onSearch = (searchText: string) => {\n    setOptions(filterData(searchText));\n  }\n  const onOk = (e : any) => {\n    props.confirmSearchText(currentValue);\n  }\n  const changeCurrentValue = (value: string) => {\n    setCurrentValue(value);\n  }\n  return (\n    <>\n      <Modal title=\"选择城市\" visible={props.visible} centered={true} onOk={onOk} onCancel={() => {props.hideDialog();}}>\n        <AutoComplete\n          options={options}\n          onSearch={onSearch}\n          onChange={changeCurrentValue}\n          style={{ width: 200 }}\n          placeholder=\"请输入选择城市\"\n        />\n      </Modal>\n    </>\n  )\n}\n\nexport default SearchDialog;","import React, { useEffect, useState } from 'react';\nimport WeatherCard from '../../component/weather_card/weather_card';\nimport SearchDialog from '../../component/search_dialog/search_dialog';\nimport {Row, Col, Card} from 'antd';\nimport { PlusSquareOutlined } from '@ant-design/icons';\nimport data from '../../config/city_id_map.json';\n\nimport Cookie from 'js-cookie';\n\nconst Weather: React.FC<{}> = (props: {}) => {\n  const [list, setList] = useState<Array<string>>([]);\n  const [visibleDialog, setVisibleDialog] = useState<boolean>(false);\n\n  const hideDialog = (e?: any) => {\n    setVisibleDialog(false);\n  }\n  const confirmSearchText = (searchText: string) : void => {\n    hideDialog();\n    setList([...list, (data as any)[searchText]]);\n  }\n\n  useEffect(() => {\n    const weatherList: undefined | Array<string> = Cookie.getJSON('weatherList');\n    console.log(weatherList);\n    if(weatherList && weatherList.length !== 0) {\n      setList(weatherList);\n    }\n  }, []);\n  useEffect(() => {\n    Cookie.set('weatherList', JSON.stringify(list));\n\n    // window.addEventListener('beforeunload', saveListOnCookie);\n  }, [list]);\n  return (\n    <div>\n      <Row gutter={[0, 32]}>\n        {\n          list.map((cityID, idx) => {\n            return (\n              <Col span={6} key={idx}><WeatherCard cityID={cityID}/></Col>\n            );\n          })\n        }\n        <Card style={{ width: 250 }} hoverable={true} onClick={() => setVisibleDialog(true) as any}>\n          <PlusSquareOutlined />\n        </Card>\n      </Row>\n      <SearchDialog visible={visibleDialog} \n        hideDialog={hideDialog} \n        confirmSearchText={confirmSearchText}/>\n\n      \n    </div>\n  )\n}\n\nexport default Weather;","import { Card } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst WeatherForecastCard: React.FC<{weather: any}> = (props: {weather: any}) => {\n  return (\n    <Card title={props.weather?.week} style={{ width: 250 }} hoverable={true}>\n      <div className=\"displaySpaceBetween\">\n        <div>{props.weather?.ymd}</div>\n        <div>{props.weather?.week}</div>\n      </div>\n      <div className=\"displaySpaceBetween\">\n        <div>{props.weather?.high}</div>\n        <div>{props.weather?.low}</div>\n      </div>\n      <div className=\"displaySpaceBetween\">\n        <div>日出：{props.weather?.sunrise}</div>\n        <div>日落：{props.weather?.sunset}</div>\n      </div>\n      <div className=\"displaySpaceBetween\">\n        <div>风向：{props.weather?.fx}</div>\n        <div>风力：{props.weather?.fl}</div>\n      </div>\n    </Card>\n  )\n}\n\nexport default WeatherForecastCard;","import React, { useEffect, useState } from 'react';\n\nimport {Row, Col, Card} from 'antd';\nimport axios from 'axios';\nimport WeatherForecastCard from '../../component/weather_forecast_card/weather_forecast_card';\n\nconst WeatherForecast: React.FC<any> = (props: any) => {\n  const [weatherState, setWeatherState] = useState<any>([]);\n  console.log(props);\n  useEffect(() => {\n    axios.get(`/api/weather/city${props.location.pathname}`)\n    .then(res => {\n      setWeatherState(res.data.data.forecast);\n    });\n  }, []);\n  return (\n    \n    <div>\n      <Row gutter={[0, 32]}>\n        {\n          weatherState.map((item: any, idx: number) => {\n            return (\n              <Col span={6} key={idx}>\n                <WeatherForecastCard weather={item}></WeatherForecastCard>\n              </Col>\n            )\n          })\n        }\n      </Row>\n\n    </div>\n  )\n}\n\nexport default WeatherForecast;","import Weather from './page/weather/weather.tsx';\nimport WeatherForecast from './page/weather_forecast/weather_forecast';\nimport './App.css';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport data from './config/city_id_map.json';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Route exact path=\"/\" component={Weather}></Route>\n        {\n          Object.keys(data).map((name) => {\n            return (\n              <Route path={`/${data[name]}`} component={WeatherForecast}></Route>\n            )\n          })\n        }\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}